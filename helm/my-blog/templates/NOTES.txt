🎉 Congratulations! Your WordPress blog has been successfully deployed!

{{- include "my-blog.validateValues.wordpress.auth" . }}
{{- include "my-blog.validateValues.mariadb.auth" . }}

📋 DEPLOYMENT SUMMARY:
  - Release Name: {{ .Release.Name }}
  - Namespace: {{ .Release.Namespace }}
  - Chart Version: {{ .Chart.Version }}
  - App Version: {{ .Chart.AppVersion }}
  - WordPress Replicas: {{ .Values.wordpress.replicaCount }}
  - MariaDB Enabled: {{ .Values.mariadb.enabled }}

🔐 AUTHENTICATION:
  - WordPress Admin User: {{ .Values.wordpress.auth.username }}
  - WordPress Admin Email: {{ .Values.wordpress.auth.email }}
  - Blog Name: {{ .Values.wordpress.auth.blogName }}

🌐 ACCESS YOUR BLOG:
{{- if .Values.wordpress.ingress.enabled }}
{{- range $host := .Values.wordpress.ingress.hosts }}
  {{- range .paths }}
  🌍 External URL: http{{ if $.Values.wordpress.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.wordpress.service.type }}
  🏠 Node Port Access:
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "my-blog.wordpress.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "🌍 Your blog is available at: http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.wordpress.service.type }}
  ⚖️  LoadBalancer Access:
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch its status by running:
        kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "my-blog.wordpress.fullname" . }}
  
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "my-blog.wordpress.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "🌍 Your blog is available at: http://$SERVICE_IP:{{ .Values.wordpress.service.port }}"
{{- else if contains "ClusterIP" .Values.wordpress.service.type }}
  🏠 Local Port Forward Access:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "my-blog.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=wordpress" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "🌍 Access your blog at: http://127.0.0.1:8080"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

🔑 GET PASSWORDS:
  WordPress Admin Password:
  kubectl get secret --namespace {{ .Release.Namespace }} {{ include "my-blog.wordpress.secretName" . }} -o jsonpath="{.data.wordpress-password}" | base64 -d
  
{{- if .Values.mariadb.enabled }}
  MariaDB Root Password:
  kubectl get secret --namespace {{ .Release.Namespace }} {{ include "my-blog.mariadb.secretName" . }} -o jsonpath="{.data.mariadb-root-password}" | base64 -d
  
  MariaDB User Password:
  kubectl get secret --namespace {{ .Release.Namespace }} {{ include "my-blog.mariadb.secretName" . }} -o jsonpath="{.data.mariadb-password}" | base64 -d
{{- end }}

📊 MONITORING:
  Check your deployment status:
  kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}"
  
  View WordPress logs:
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=wordpress"
  
{{- if .Values.mariadb.enabled }}
  View MariaDB logs:
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=mariadb"
{{- end }}

🧪 TESTING:
  Run the chart tests:
  helm test {{ .Release.Name }} --namespace {{ .Release.Namespace }}

🎛️  HELM COMMANDS:
  Upgrade your deployment:
  helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --namespace {{ .Release.Namespace }}
  
  Rollback if needed:
  helm rollback {{ .Release.Name }} --namespace {{ .Release.Namespace }}
  
  Uninstall:
  helm uninstall {{ .Release.Name }} --namespace {{ .Release.Namespace }}

{{- if .Values.wordpress.persistence.enabled }}
⚠️  PERSISTENCE:
  Your WordPress data is stored in a PersistentVolumeClaim.
  To retain your data when uninstalling, manually delete the PVC:
  kubectl delete pvc --namespace {{ .Release.Namespace }} {{ include "my-blog.wordpress.claimName" . }}
{{- end }}

{{- if and .Values.mariadb.enabled .Values.mariadb.primary.persistence.enabled }}
⚠️  DATABASE PERSISTENCE:
  Your MariaDB data is stored in a PersistentVolumeClaim.
  To retain your database when uninstalling, manually delete the PVC:
  kubectl delete pvc --namespace {{ .Release.Namespace }} {{ include "my-blog.mariadb.claimName" . }}
{{- end }}

📚 NEXT STEPS:
  1. Access your blog using the URL above
  2. Complete the WordPress setup wizard
  3. Customize your blog theme and plugins
  4. Configure backups for your content
  5. Set up SSL/TLS if using ingress

🔧 HELM FEATURES SHOWCASED:
  ✅ Template helpers for reusable code
  ✅ Conditional templating with if/else
  ✅ Value validation and error handling
  ✅ Multi-component application deployment
  ✅ Persistent storage configuration
  ✅ Service discovery between components
  ✅ Secret management with random generation
  ✅ Ingress configuration with version detection
  ✅ Horizontal Pod Autoscaler
  ✅ Comprehensive testing with hooks
  ✅ Rich metadata and labels
  ✅ Global and component-specific configurations

Happy blogging! 🚀
