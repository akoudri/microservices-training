apiVersion: v1
kind: Namespace
metadata:
  name: training
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld
  namespace: training
spec:
  selector:
    matchLabels:
      app: helloworld
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld
        env: production
        author: karthequian
        tiers: front
        version: "1.0"
    spec:
      containers:
        - name: helloworld
          image: karthequian/helloworld:blue
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld-service
  namespace: training
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: helloworld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld2
  namespace: training
spec:
  selector:
    matchLabels:
      app: helloworld2
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld2
        env: production
        author: karthequian
        tiers: front
        version: "1.0"
    spec:
      containers:
        - name: helloworld
          image: karthequian/helloworld:black
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld2-service
  namespace: training
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: helloworld2
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: hello-host
  namespace: training
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`hello.upskillforge.com`)
      kind: Rule
      services:
        - name: helloworld-service
          port: 80
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-hello2
  namespace: training
spec:
  stripPrefix:
    prefixes:
      - /hello2
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: hello-path
  namespace: training
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`upskillforge.com`) && PathPrefix(`/hello2`)
      kind: Rule
      middlewares:
        - name: strip-hello2
      services:
        - name: helloworld2-service
          port: 80
