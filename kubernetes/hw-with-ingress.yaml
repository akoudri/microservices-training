apiVersion: v1
kind: Namespace
metadata:
  name: training
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld
  namespace: training
spec:
  selector:
    matchLabels:
      app: helloworld
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld
        env: production
        author: karthequian
        tiers: front
        version: "1.0"
    spec:
      containers:
      - name: helloworld
        image: karthequian/helloworld:blue
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld-service
  namespace: training
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: helloworld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld2
  namespace: training
spec:
  selector:
    matchLabels:
      app: helloworld2
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld2
        env: production
        author: karthequian
        tiers: front
        version: "1.0"
    spec:
      containers:
      - name: helloworld2
        image: karthequian/helloworld:black
        ports:
        - containerPort: 80
        env:
        - name: SERVER_URL
          valueFrom:
            secretKeyRef:
              name: mdp
              key: password
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld2-service
  namespace: training
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: helloworld2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  namespace: training
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /hello
        pathType: Prefix
        backend:
          service:
            name: helloworld-service
            port:
              number: 80
      - path: /hello2
        pathType: Prefix
        backend:
          service:
            name: helloworld2-service
            port:
              number: 80
